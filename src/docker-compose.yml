version: '3.4'

networks:
  elastic-stack-example:

services:

  elasticsearch-certs:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch-certs
    networks:
      elastic-stack-example:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch
    networks:
      elastic-stack-example:
    depends_on:
      elasticsearch-certs:
        condition: service_completed_successfully

  elasticsearch-init:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch-init
    networks:
      elastic-stack-example:
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.0
    container_name: logstash
    networks:
      elastic-stack-example:
    depends_on:
      elasticsearch-init:
        condition: service_completed_successfully

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    container_name: kibana    
    networks:
      elastic-stack-example:
    depends_on:
      elasticsearch-init:
        condition: service_completed_successfully

  kibana-init:
    image: alpine:latest
    container_name: kibana-init
    networks:
      elastic-stack-example:
    depends_on:
      kibana:
        condition: service_healthy

  elasticstack-api:
    image: ${DOCKER_REGISTRY-}elasticstack-api
    container_name: elasticstack-api
    build:
      context: .
      dockerfile: Services/ElasticStack/ElasticStack.API/Dockerfile
    networks:
      elastic-stack-example:
    depends_on:
      - logstash
